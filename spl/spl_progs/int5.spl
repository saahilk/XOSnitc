alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

alias sysCallNo S1;
sysCallNo = [physicalSP - 1];

if(sysCallNo==8) then
	alias ctr S2;
	ctr=0;
	while(ctr<32) do
		if([READY_LIST+32*ctr+1]==0) then
			break;
		endif;
		ctr=ctr+1;
	endwhile;

	if(ctr==32) then				//ctr is childPID
		print "PCBs full";
		[physicalSP-2]=-1;
		ireturn;
	endif;

	alias curPCB S4;
	curPCB=READY_LIST+32*ctr;

	[curPCB]=ctr;

	alias curPID S3;
	curPID=(PTBR-1024)/8;

	alias iter S5;
	iter=0;

	alias memctr S6;
	memctr=0;
	iter=25;

	while(iter < 64) do
		if([MEM_LIST+iter]==0) then
			memctr=memctr+1;
			//print memctr;
		endif;
		if(memctr==1) then
			break;
		endif;
		iter=iter+1;
	endwhile;

	alias cPTBR S9;
	if(memctr==0) then
		alias count S8;
		count=PTBR-1024+6;
		while(1) do
			cPTBR=1024+(count)%256;
			if(count%8==6) then
				count=count+2;
				continue;
			endif;

			if([cPTBR+1]=="11") then
				[cPTBR+1]="01";
			endif;

			if([cPTBR+1]=="01" && [MEM_LIST+[cPTBR]]<2) then
				break;
			endif;

			count=count+2;	
		endwhile;

		count=448;
		while(count<512) do
			if([DISK_LIST+count]==0) then
				break;
			endif;
			count=count+1;
		endwhile;

		if(count==512) then
			print "No disk spc";
			[physicalSP+1]=10;
			SP=SP+2;
			inline "JMP 11776"; 
			ireturn;
		endif;


		if(count<512) then
			store([cPTBR],count);
			iter=[cPTBR];
			[DISK_LIST+count]=[DISK_LIST+count]+1;
			store(6,20);
			[cPTBR]=count;
			[cPTBR+1]="00";
		endif;
	endif;

	alias counter S7;
	alias pageNo S8;
	counter=0;
	cPTBR=ctr*8+1024;


	[MEM_LIST+iter]=1;
	while(counter<512) do 
		[iter*512+counter]=[[PTBR+6]*512+counter];
		counter=counter+1;
	endwhile;

	[cPTBR+6]=iter;
	[cPTBR+7]="01";

	counter=0;
	while(counter<6) do
		[cPTBR+counter]=[PTBR+counter];
		counter=counter+1;
	endwhile;

	counter=0;
	while(counter<3) do
		if([PTBR+counter*2+1]=="01" || [PTBR+counter*2+1]=="11") then

			[MEM_LIST+[PTBR+counter*2]]=[MEM_LIST+[PTBR+counter*2]]+1;
			counter=counter+1;
			continue;
		endif;

		if([PTBR+counter*2+1]=="00") then
			if([PTBR+counter*2]>447) then
				[DISK_LIST+[PTBR+counter*2]]=[DISK_LIST+[PTBR+counter*2]]+1;
				store(6,20);
			endif;
		endif;	
		counter=counter+1;
	endwhile;

	[curPCB+2]=BP;
	[curPCB+3]=SP-1;

	//IP
	[curPCB+4]=[physicalSP];

	[curPCB+5]=cPTBR;
	[curPCB+6]=4;

	[curPCB+7]=R0;
	[curPCB+8]=R1;
	[curPCB+9]=R2;
	[curPCB+10]=R3;
	[curPCB+11]=R4;
	[curPCB+12]=R5;
	[curPCB+13]=R6;
	[curPCB+14]=R7;

	[curPCB+31]=curPID;

	counter=0;
	while(counter<8) do
		[curPCB+15+counter*2]=[READY_LIST+curPID*32+15+counter*2];
		[curPCB+15+counter*2+1]=[READY_LIST+curPID*32+15+counter*2+1];
		if([curPCB+15+counter*2]!=-1) then
			[FILE_TABLE+2*[curPCB+15+counter*2]+1]=[FILE_TABLE+2*[curPCB+15+counter*2]+1]+1;
		endif;
		counter=counter+1;
	endwhile;

	[curPCB+1]=1;
	[physicalSP-2]=ctr;

	[([cPTBR + 2 * ((SP-1) / 512)] * 512) + ((SP-1) % 512)-1]=-2;
	ireturn;

endif;

